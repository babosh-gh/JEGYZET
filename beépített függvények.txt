// Szövegkezelő függvények
const text = "  JavaScript  ";

text.length;        // 13
text.trim();        // "JavaScript" //külső spacek remove
text.toUpperCase(); // "JAVASCRIPT"
text.toLowerCase(); // "javascript"
text.includes("Script"); // true
text.startsWith("Ja");   // true
text.endsWith("pt");     // true
text.replace("Java", "Type"); // "TypeScript"
text.slice(2, 6);  // "vaSc" substring // -6 ennyit vág le

text.charAt(0) // J
concat() //új string hozzáfűzés a végéhez
repeat()  //string ismétlés (számuk)
replace()  //adott stringet lecserélni az első előforduláson
replaceAll("egy","kettő")  //minden találtai helyen lecserélni a stringet (minden egy -> kettő)
substr()  // kezdő karakter indexe, string hossza // kivág stringet szövegből // -6 = ennyit vág le
substring()  // kezdő kar i, utolsó kar i
split() // szétszedi a stringet megadott karakter alapján, tömbbé változtatja a darabjait
join()  // tömbből karakterláncot csinál

// szám függvények
Number.isInteger(10); // true
Number.parseFloat("2.5"); // 2.5

Math.round(3.6); // 4
Math.floor(3.6); // 3
Math.ceil(3.1);  // 4
Math.max(2, 8, 4); // 8
Math.min(2, 8, 4); // 2
Math.random(); // pl. 0.4235

// tömb függvények

const nums = [1, 2, 3, 4, 5];

nums.reverse() // [5, 4, 3, 2, 1];
nums.push(6);      // [1,2,3,4,5,6]
nums.pop();        // [1,2,3,4,5]
nums.map(n => n * 2); // [2,4,6,8,10]
nums.filter(n => n > 3); // [4,5]
nums.reduce((a, b) => a + b, 0); // 15
nums.find(n => n === 3); // 3
nums.includes(2); // true
